/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import resources.Toast;
import sms.SMSClient;

/**
 *
 * @author Joshepw
 */
public class mainFrame extends javax.swing.JFrame {
    private ReadCSV fileCSV = new ReadCSV();
    private List[] data;
    public static List portListCombo;
    private Toast toast;
    private FileActions file = new FileActions();
    private List tempDevices;
    private taskDevice taskDev = new taskDevice();
    private static List<taskDevice> devicesList = new ArrayList<>();
    private int licence = file.getCount();
    private static String logText = "";
    private showModems modemsList = new showModems();
    private static boolean state = false;
    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
        
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int X = (screen.width / 2) - (378 / 2); // Center horizontally.
        int Y = (screen.height / 2) - (455 / 2); // Center vertically.
        this.setBounds(X,Y , 378,455);
        
        if(file.isExistDLL()){
            System.out.println("Exist");
        }else{
            System.out.println("No Exist");
        }
        
        ListPorts listPorts = new ListPorts();
        clearLed();
        toast = new Toast();
        fileChoose.setFileFilter(new ExtensionFileFilter("Archivo de Exel","XLS"));
        checkLicence();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChoose = new javax.swing.JFileChooser();
        log = new javax.swing.JDialog();
        logScroll = new javax.swing.JScrollPane();
        logPanel = new javax.swing.JEditorPane();
        signalBar = new javax.swing.JProgressBar();
        signalLb = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        progressLb = new javax.swing.JLabel();
        signalOP = new javax.swing.JLabel();
        progressID = new javax.swing.JLabel();
        licenceDialog = new javax.swing.JDialog();
        licencePanel = new javax.swing.JPanel();
        expired = new javax.swing.JLabel();
        licenceKey = new javax.swing.JTextField();
        licenceSend = new javax.swing.JButton();
        licenceInfo = new javax.swing.JLabel();
        mainFrame = new javax.swing.JTabbedPane();
        archivo = new javax.swing.JPanel();
        openFile = new javax.swing.JButton();
        tittleFile = new javax.swing.JLabel();
        fileName = new javax.swing.JLabel();
        fileCols = new javax.swing.JLabel();
        listByName = new javax.swing.JComboBox();
        addList = new javax.swing.JButton();
        timeLabel = new javax.swing.JLabel();
        timeInt = new javax.swing.JSpinner();
        time = new javax.swing.JComboBox();
        status = new javax.swing.JPanel();
        sendTask = new javax.swing.JButton();
        taskListScroll = new javax.swing.JScrollPane();
        taskList = new javax.swing.JList();
        taskList_label = new javax.swing.JLabel();
        showProgress = new javax.swing.JButton();
        modems = new javax.swing.JPanel();
        txt_addCOM = new javax.swing.JLabel();
        nameAdd = new javax.swing.JTextField();
        comm = new javax.swing.JComboBox();
        addDevice = new javax.swing.JButton();
        txt_listCOM = new javax.swing.JLabel();
        deviceListScroll = new javax.swing.JScrollPane();
        deviceList = new javax.swing.JList();
        Service_Center = new javax.swing.JLabel();
        csAdd = new javax.swing.JTextField();
        showDevices = new javax.swing.JButton();
        sms_panel = new javax.swing.JPanel();
        customSMS_device = new javax.swing.JLabel();
        sendSMS_device = new javax.swing.JComboBox();
        customSMS_nro = new javax.swing.JLabel();
        sendSMS_nro = new javax.swing.JTextField();
        sendSMS_scroll = new javax.swing.JScrollPane();
        sendSMS_text = new javax.swing.JTextArea();
        customSMS_send = new javax.swing.JButton();
        customSend_text = new javax.swing.JLabel();
        customSend_tittle = new javax.swing.JLabel();
        aboutus_panel = new javax.swing.JPanel();
        about_name = new javax.swing.JLabel();
        about_subname = new javax.swing.JLabel();
        about_exname = new javax.swing.JLabel();
        about_vercion = new javax.swing.JLabel();
        about_company = new javax.swing.JLabel();
        about_RTN = new javax.swing.JLabel();
        about_email = new javax.swing.JLabel();
        about_licence = new javax.swing.JLabel();
        mainTittle = new javax.swing.JLabel();
        ledPanel = new javax.swing.JPanel();
        ledNumber = new javax.swing.JLabel();
        ledDevice = new javax.swing.JLabel();
        ledTime = new javax.swing.JLabel();
        ledNone = new javax.swing.JLabel();

        fileChoose.setFileFilter(null);

        log.setTitle("Log de Eventos");
        log.setMinimumSize(new java.awt.Dimension(300, 452));
        log.setResizable(false);

        logScroll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log de Eventos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11), new java.awt.Color(51, 51, 51))); // NOI18N
        logScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        logScroll.setOpaque(false);

        logPanel.setEditable(false);
        logPanel.setContentType("text/html"); // NOI18N
        logPanel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        logPanel.setText("<html>\r\n  <head>\r\n\r<style>\nbody{\nfont-family: \"Tahoma\";\nfont-size: 8px;\n}\n\nspan{\nfont-family: \"Tahoma\";\nfont-size: 8px;\n}\n</stye>\n  </head>\r\n  <body>\r\n  </body>\r\n</html>\r\n");
        logPanel.setOpaque(false);
        logScroll.setViewportView(logPanel);

        signalLb.setText("Nivel de Se√±al : ");

        progressLb.setText("Progreso del Dispositivo :");

        signalOP.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        signalOP.setText("-  -  -  -  -  ");

        progressID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        progressID.setText("-  -  -  -  -  ");

        org.jdesktop.layout.GroupLayout logLayout = new org.jdesktop.layout.GroupLayout(log.getContentPane());
        log.getContentPane().setLayout(logLayout);
        logLayout.setHorizontalGroup(
            logLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(logLayout.createSequentialGroup()
                .addContainerGap()
                .add(logLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(signalBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(logScroll)
                    .add(progressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(logLayout.createSequentialGroup()
                        .add(progressLb)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(progressID, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(logLayout.createSequentialGroup()
                        .add(signalLb)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 57, Short.MAX_VALUE)
                        .add(signalOP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        logLayout.setVerticalGroup(
            logLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(logLayout.createSequentialGroup()
                .addContainerGap()
                .add(logScroll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(logLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(progressLb)
                    .add(progressID))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(logLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(signalLb)
                    .add(signalOP))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(signalBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        licenceDialog.setMinimumSize(new java.awt.Dimension(295, 138));
        licenceDialog.setResizable(false);

        expired.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expired.setText("Su licencia a expirado");

        licenceSend.setText("Enviar");
        licenceSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                licenceSendMouseClicked(evt);
            }
        });

        licenceInfo.setText("<html>\n<p>El limite de envios de su licencia a caducado, por favor contactar a <b>joshepw@gmail.com</b> para exigir una licencia completa o temporal.\n</html>");

        org.jdesktop.layout.GroupLayout licencePanelLayout = new org.jdesktop.layout.GroupLayout(licencePanel);
        licencePanel.setLayout(licencePanelLayout);
        licencePanelLayout.setHorizontalGroup(
            licencePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(licencePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(licencePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(licenceInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(expired, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .add(licencePanelLayout.createSequentialGroup()
                        .add(licenceKey)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(licenceSend)))
                .addContainerGap())
        );
        licencePanelLayout.setVerticalGroup(
            licencePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(licencePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(expired)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(licencePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(licenceKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(licenceSend))
                .add(18, 18, 18)
                .add(licenceInfo)
                .add(23, 23, 23))
        );

        org.jdesktop.layout.GroupLayout licenceDialogLayout = new org.jdesktop.layout.GroupLayout(licenceDialog.getContentPane());
        licenceDialog.getContentPane().setLayout(licenceDialogLayout);
        licenceDialogLayout.setHorizontalGroup(
            licenceDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(licencePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        licenceDialogLayout.setVerticalGroup(
            licenceDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(licencePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMSender EX - iTech Software");
        setLocationByPlatform(true);
        setResizable(false);

        archivo.setOpaque(false);
        archivo.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                archivoComponentShown(evt);
            }
        });

        openFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document-open.png"))); // NOI18N
        openFile.setText("  Abrir Documento");
        openFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openFileMouseClicked(evt);
            }
        });

        tittleFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tittleFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tittleFile.setText("Selecione un Documento para empesar");

        fileName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fileName.setText("ningun archivo selecionado");

        fileCols.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        listByName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione un dispositivo", "COM1" }));
        listByName.setEnabled(false);

        addList.setText("Agregar");
        addList.setEnabled(false);
        addList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addListMouseClicked(evt);
            }
        });

        timeLabel.setText("Lapso de tiempo por envio :");
        timeLabel.setEnabled(false);

        timeInt.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        timeInt.setEnabled(false);

        time.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "segundos", "minutos" }));
        time.setEnabled(false);

        org.jdesktop.layout.GroupLayout archivoLayout = new org.jdesktop.layout.GroupLayout(archivo);
        archivo.setLayout(archivoLayout);
        archivoLayout.setHorizontalGroup(
            archivoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, archivoLayout.createSequentialGroup()
                .addContainerGap()
                .add(archivoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(openFile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, tittleFile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(fileName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(archivoLayout.createSequentialGroup()
                        .add(timeLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 142, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(timeInt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(time, 0, 111, Short.MAX_VALUE))
                    .add(archivoLayout.createSequentialGroup()
                        .add(listByName, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(addList))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, fileCols, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        archivoLayout.setVerticalGroup(
            archivoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, archivoLayout.createSequentialGroup()
                .addContainerGap()
                .add(tittleFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(fileName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(fileCols, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, 22, Short.MAX_VALUE)
                .add(archivoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(timeLabel)
                    .add(timeInt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(time, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(archivoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(listByName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(addList))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(openFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27))
        );

        mainFrame.addTab("Archivo", archivo);

        status.setOpaque(false);
        status.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                statusComponentShown(evt);
            }
        });

        sendTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document-send.png"))); // NOI18N
        sendTask.setText("  Iniciar Tareas");
        sendTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendTaskMouseClicked(evt);
            }
        });

        taskList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taskList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        taskList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taskListKeyReleased(evt);
            }
        });
        taskListScroll.setViewportView(taskList);

        taskList_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        taskList_label.setText("Lista de tareas por enviar :");

        showProgress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/gtk-indent-ltr.png"))); // NOI18N
        showProgress.setText("  Mostar Proceso");
        showProgress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showProgressMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout statusLayout = new org.jdesktop.layout.GroupLayout(status);
        status.setLayout(statusLayout);
        statusLayout.setHorizontalGroup(
            statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(statusLayout.createSequentialGroup()
                .addContainerGap()
                .add(statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(taskList_label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(taskListScroll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .add(statusLayout.createSequentialGroup()
                        .add(sendTask, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(showProgress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        statusLayout.setVerticalGroup(
            statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, statusLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .add(taskList_label)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(taskListScroll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(statusLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(showProgress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(sendTask, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(25, 25, 25))
        );

        mainFrame.addTab("Tareas", status);

        modems.setOpaque(false);
        modems.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                modemsComponentShown(evt);
            }
        });

        txt_addCOM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_addCOM.setText("Agregar Dispositivo : ");

        nameAdd.setText("Nombre");

        comm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- - -" }));

        addDevice.setText("Agregar");
        addDevice.setEnabled(false);
        addDevice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDeviceMouseClicked(evt);
            }
        });

        txt_listCOM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_listCOM.setText("Lista de Dispositivos :");

        deviceList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        deviceList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deviceListKeyReleased(evt);
            }
        });
        deviceListScroll.setViewportView(deviceList);

        Service_Center.setText("Centro de Servicio Telefonico :");

        csAdd.setText("+50499526911");

        showDevices.setText("Status");
        showDevices.setEnabled(false);
        showDevices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showDevicesMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout modemsLayout = new org.jdesktop.layout.GroupLayout(modems);
        modems.setLayout(modemsLayout);
        modemsLayout.setHorizontalGroup(
            modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(modemsLayout.createSequentialGroup()
                .addContainerGap()
                .add(modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(deviceListScroll)
                    .add(txt_listCOM)
                    .add(txt_addCOM)
                    .add(modemsLayout.createSequentialGroup()
                        .add(modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, modemsLayout.createSequentialGroup()
                                .add(Service_Center)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(csAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(modemsLayout.createSequentialGroup()
                                .add(nameAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(comm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(modemsLayout.createSequentialGroup()
                                .add(addDevice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(showDevices, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        modemsLayout.setVerticalGroup(
            modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(modemsLayout.createSequentialGroup()
                .addContainerGap()
                .add(txt_addCOM)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(modemsLayout.createSequentialGroup()
                        .add(modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(Service_Center)
                            .add(csAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 16, Short.MAX_VALUE)
                        .add(modemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(nameAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(comm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(addDevice))
                        .add(21, 21, 21)
                        .add(txt_listCOM)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(deviceListScroll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(22, 22, 22))
                    .add(modemsLayout.createSequentialGroup()
                        .add(showDevices)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        mainFrame.addTab("Modems", modems);

        sms_panel.setOpaque(false);
        sms_panel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                sms_panelComponentShown(evt);
            }
        });

        customSMS_device.setText("Seleccionar Dispositivo : ");

        sendSMS_device.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ningun Dispositivo" }));

        customSMS_nro.setText("Nro de Telefono :");

        sendSMS_text.setColumns(20);
        sendSMS_text.setRows(2);
        sendSMS_scroll.setViewportView(sendSMS_text);

        customSMS_send.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document-send.png"))); // NOI18N
        customSMS_send.setText("  Enviar");
        customSMS_send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customSMS_sendMouseClicked(evt);
            }
        });

        customSend_text.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        customSend_text.setText("Texto del Mensaje");

        customSend_tittle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        customSend_tittle.setText("Detalles de Envio");

        org.jdesktop.layout.GroupLayout sms_panelLayout = new org.jdesktop.layout.GroupLayout(sms_panel);
        sms_panel.setLayout(sms_panelLayout);
        sms_panelLayout.setHorizontalGroup(
            sms_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sms_panelLayout.createSequentialGroup()
                .addContainerGap()
                .add(sms_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sendSMS_scroll)
                    .add(sms_panelLayout.createSequentialGroup()
                        .add(customSMS_device)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(sendSMS_device, 0, 205, Short.MAX_VALUE))
                    .add(sms_panelLayout.createSequentialGroup()
                        .add(customSMS_nro)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(sendSMS_nro))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, sms_panelLayout.createSequentialGroup()
                        .add(10, 194, Short.MAX_VALUE)
                        .add(customSMS_send, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(sms_panelLayout.createSequentialGroup()
                        .add(sms_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(customSend_tittle)
                            .add(customSend_text))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sms_panelLayout.setVerticalGroup(
            sms_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sms_panelLayout.createSequentialGroup()
                .addContainerGap()
                .add(customSend_tittle)
                .add(12, 12, 12)
                .add(sms_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sendSMS_device, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(customSMS_device))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sms_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sendSMS_nro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(customSMS_nro))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(customSend_text)
                .add(4, 4, 4)
                .add(sendSMS_scroll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(customSMS_send)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        mainFrame.addTab("Enviar SMS", sms_panel);

        aboutus_panel.setOpaque(false);

        about_name.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        about_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_name.setText("Jose Ivan Suazo");

        about_subname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_subname.setText("Desarrollador de Codigo y Tecnologias");

        about_exname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        about_exname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_exname.setText("SMSender EX");

        about_vercion.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        about_vercion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        about_vercion.setText("ver. 1.1");

        about_company.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        about_company.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_company.setText("iTech Software - STI");

        about_RTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_RTN.setText("RTN: 05011989039585");

        about_email.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_email.setText("Email: joshepw@gmail.com");

        about_licence.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        about_licence.setForeground(new java.awt.Color(255, 51, 51));
        about_licence.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        about_licence.setText("Licencia Demo - 10 Envios Restantes");

        org.jdesktop.layout.GroupLayout aboutus_panelLayout = new org.jdesktop.layout.GroupLayout(aboutus_panel);
        aboutus_panel.setLayout(aboutus_panelLayout);
        aboutus_panelLayout.setHorizontalGroup(
            aboutus_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(aboutus_panelLayout.createSequentialGroup()
                .addContainerGap()
                .add(aboutus_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(about_company, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, about_email, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(about_exname, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, about_RTN, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, about_licence, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, about_name, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, about_subname, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, aboutus_panelLayout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .add(about_vercion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(106, 106, 106))
        );
        aboutus_panelLayout.setVerticalGroup(
            aboutus_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, aboutus_panelLayout.createSequentialGroup()
                .addContainerGap()
                .add(about_exname)
                .add(1, 1, 1)
                .add(about_vercion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(about_RTN)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(about_company)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(about_email)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(about_licence)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(about_name)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(about_subname)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        mainFrame.addTab("Informacion", aboutus_panel);

        mainTittle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mainTittle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/SMSender EX.png"))); // NOI18N

        ledPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tarea Actual", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));
        ledPanel.setOpaque(false);
        ledPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ledNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ledNumber.setText("Numero");
        ledPanel.add(ledNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 20, 210, 20));

        ledDevice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ledDevice.setText("Dispositivo Actual");
        ledPanel.add(ledDevice, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 40, 210, -1));

        ledTime.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        ledTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ledTime.setText("00:00");
        ledPanel.add(ledTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 110, 50));

        ledNone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ledNone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ledNone.setText("Ninguna Tarea en Ejecucion");
        ledPanel.add(ledNone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 17, 330, 40));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mainTittle, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(mainFrame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(ledPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(mainTittle)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(mainFrame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ledPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public static void setProgress(boolean stateSend){
        if(stateSend){
            state = true;
            sendTask.setEnabled(false);
            showDevices.setEnabled(false);
            addDevice.setEnabled(false);
            showModems.show.setEnabled(false);
            showModems.update.setEnabled(false);
            customSMS_send.setEnabled(false);
            
            new Thread(new taskList(devicesList)).start();
        }else{
            state = false;
            sendTask.setEnabled(true);
            showDevices.setEnabled(true);
            addDevice.setEnabled(true);
            showModems.show.setEnabled(true);
            showModems.update.setEnabled(true);
            customSMS_send.setEnabled(true);
        }
    }
    
    private void setMetadata(boolean set){
        listByName.setEnabled(set);
        addList.setEnabled(set);
        timeLabel.setEnabled(set);
        timeInt.setEnabled(set);
        time.setEnabled(set);
    }
    
    public static void setProgressBar(int turn,int size){
        double result = ((double)turn/(double)size);
        progressBar.setValue((int)(result*100));
        System.out.println("PROGRESS >> "+(int)(result*100));
    }
    
    public static void setDeviceBar(int db,String network,String device){
        signalOP.setText(network);
        signalBar.setValue(db);
        progressID.setText(device);
    }
    
    public static void clearDeviceBar(){
        signalOP.setText("  -  -  -  -  -  ");
        signalBar.setValue(0);
        progressID.setText("  -  -  -  -  -  ");
    }
    
    public static void LOG(String text,int nivel){
        String body = "";
        switch(nivel){
            case 0:
                body = "<span>"+text+"</span><br/>";
                break;
            
            case 1:
                body = "<span style=\"color:#009900\">"+text+"</span><br/>";
                break;
                
            case 2:
                body = "<span style=\"color:#990000\">"+text+"</span><br/>";
                break;
                
            case 3:
                body = "<span style=\"color:#000099\">"+text+"</span><br/>";
                break;
                
            case 4:
                body = text;
        }
        logText = body+logText;
        logPanel.setText(logText);
    }
    
    public static void showMetadata(String number,String device){
        ledNumber.setText(number);
        ledDevice.setText(device);
        ledNone.setText("");
    }
    
    public static void setClockData(int time){
        int min = time/60;
        int sec = time%60;
        ledTime.setText(((min<10)? "0" : "")+min+":"+((sec<10)? "0" : "")+sec+"s");
    }
    
    public static void clearLed(){
        ledNumber.setText("");
        ledDevice.setText("");
        ledTime.setText("");
        ledNone.setText("Ninguna Tarea en Ejecucion");
    }
    
    public static void textLed(String text){
        ledNumber.setText("");
        ledDevice.setText("");
        ledTime.setText("");
        ledNone.setText(text);
    }
    
    public static void colorLed(Color color){
        ledNone.setForeground(color);
    }
    
    public static void setButtom(boolean stat){
        sendTask.setEnabled(stat);
    }
    
    private void openFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openFileMouseClicked
        
        int returnVal = fileChoose.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fileLoad = fileChoose.getSelectedFile();
            fileName.setText("Nombre de Archivo : " + fileLoad.getName());
            data = fileCSV.getExelData(fileLoad.getAbsolutePath());
            int x = 0;
            for(int i=0;i<data.length;i++){
                if(data[i].size()==2){
                    x++;
                }
            }
            if(x==data.length){
                setMetadata(true);
                taskDev.setFile(data,fileLoad.getName());
                toast.showItem("Documento de Exel", "Archivo : " + fileLoad.getName() + "\nNumero de Clientes : " + (1 - data.length), "file");
            }else{
                JOptionPane.showMessageDialog(archivo, "El Archivo selecionado contienen un formato invalido");
                setMetadata(false);
            }
            
            fileCols.setText("Numero de Clientes : " + data.length);
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_openFileMouseClicked

    private void addListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addListMouseClicked
        if(addList.isEnabled()){
            int selTime = (time.getSelectedIndex()==0)? 1000 : (60*1000);
            int loopTime = ((int)timeInt.getValue())*selTime;
            fileName.setText("ningun archivo selecionado");
            fileCols.setText("");
            setMetadata(false);
            taskDev.setDevice((String[])tempDevices.get(listByName.getSelectedIndex()), loopTime);
            toast.showItem("Tarea de Envio", "Agregada correctamente a la lista", "add");
            devicesList.add(taskDev);
            taskDev = new taskDevice();
        }
    }//GEN-LAST:event_addListMouseClicked

    private void modemsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_modemsComponentShown
        tempDevices = file.getDevices();  
           
        deviceList.setModel(new CBModel(file.getComboList(tempDevices)));
    }//GEN-LAST:event_modemsComponentShown

    private void sendTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendTaskMouseClicked
        if(sendTask.isEnabled()){
            if(licence>0){
                if(licence<90){
                    file.addCount(licence);
                    checkLicence();
                }
                Rectangle pos = this.getBounds();
                log.setBounds(pos.x+380, pos.y, 300, 455);
                log.setVisible(true);
                setProgress(true);
            }else{
                Rectangle pos = this.getBounds();
                licenceDialog.setBounds(pos.x+45, pos.y+80, 295, 170);
                licenceDialog.setVisible(true);
            }            
        }
    }//GEN-LAST:event_sendTaskMouseClicked

    private void addDeviceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDeviceMouseClicked
        if(addDevice.isEnabled()){
            String[] deviceFile = {nameAdd.getText(),csAdd.getText(),(String)portListCombo.get(comm.getSelectedIndex())};
            file.addDevice(deviceFile);
            tempDevices = file.getDevices();
            deviceList.setModel(new CBModel(file.getComboList(tempDevices)));
            toast.showItem("Dispositivo "+deviceFile[2],"Se a agregado "+deviceFile[0]+" a la lista de dispositivos","device");
        }
    }//GEN-LAST:event_addDeviceMouseClicked

    private void sms_panelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_sms_panelComponentShown
        tempDevices = file.getDevices();
        sendSMS_device.setModel(new CBModel(file.getComboList(tempDevices)));
        file.printDevices();
    }//GEN-LAST:event_sms_panelComponentShown

    private void customSMS_sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customSMS_sendMouseClicked
        if(customSMS_send.isEnabled()){
            String[] selected = (String[]) tempDevices.get(sendSMS_device.getSelectedIndex());
            System.out.println(selected[0]+" ["+selected[2]+"] INDEX "+selected[3]);
            SMSClient customSMS = new SMSClient(1,selected[2],selected[1]);
            customSMS.sendMessage(sendSMS_nro.getText(), sendSMS_text.getText());
        }
    }//GEN-LAST:event_customSMS_sendMouseClicked
    
    private void delEntryDevice(){
        String[] delEntry = (String[])tempDevices.get(deviceList.getSelectedIndex());
        file.disableDevice(Integer.parseInt(delEntry[3]));
        tempDevices = file.getDevices();
        deviceList.setModel(new CBModel(file.getComboList(tempDevices)));
    }
    
    private void deviceListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deviceListKeyReleased
        switch(evt.getKeyChar()){
            case '\u0008':
                delEntryDevice();
            break;
            case '\u007F':
                delEntryDevice();
            break;
        }
    }//GEN-LAST:event_deviceListKeyReleased

    private void archivoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_archivoComponentShown
        tempDevices = this.file.getDevices();
        listByName.setModel(new CBModel(this.file.getComboList(tempDevices)));
    }//GEN-LAST:event_archivoComponentShown

    private void statusComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_statusComponentShown
        String[] dataList = new String[]{null};
        if(devicesList.size()>0){
            dataList = new String[devicesList.size()];
            for(int i=0;i<devicesList.size();i++){
                dataList[i] = devicesList.get(i).getListData();
            }
        }
        taskList.setModel(new CBModel(dataList));
    }//GEN-LAST:event_statusComponentShown

    private void taskListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taskListKeyReleased
       switch(evt.getKeyChar()){
            case '\u0008':
                devicesList.remove(taskList.getSelectedIndex());
            break;
            case '\u007F':
                devicesList.remove(taskList.getSelectedIndex());
            break;
        }
       
        String[] dataList = new String[]{null};
        if(devicesList.size()>0){
            dataList = new String[devicesList.size()];
            for(int i=0;i<devicesList.size();i++){
                dataList[i] = devicesList.get(i).getListData();
            }
        }
        taskList.setModel(new CBModel(dataList));
    }//GEN-LAST:event_taskListKeyReleased

    private void showProgressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showProgressMouseClicked
        Rectangle pos = this.getBounds();
        log.setBounds(pos.x+380, pos.y, 300, 455);
        log.setVisible(true);        
    }//GEN-LAST:event_showProgressMouseClicked

    private void showDevicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showDevicesMouseClicked
        if(showDevices.isEnabled()){
            modemsList.DV = portListCombo;
            modemsList.comm.setModel(new CBModel(portListCombo));
            Rectangle pos = this.getBounds();
            modemsList.setBounds(pos.x-264, pos.y, 262, 325);
            modemsList.setVisible(true);
        }
    }//GEN-LAST:event_showDevicesMouseClicked

    private void licenceSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_licenceSendMouseClicked
        if(file.licence(licenceKey.getText())){
            JOptionPane.showMessageDialog(this, "Se a registrado su licencia a "+file.getLicence());
            licenceDialog.setVisible(false);
            checkLicence();
        }else{
            JOptionPane.showMessageDialog(this, "Clave incorrecta, por favor ingresar una clave correcta");
        }
    }//GEN-LAST:event_licenceSendMouseClicked

    private void checkLicence(){
        if(licence>90){
            about_licence.setText("Registrado a " + file.getLicence());
            about_licence.setForeground(new java.awt.Color(51, 99, 51));
        }else{
            about_licence.setText("Licencia Demo - "+licence+" Envios Restantes");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
                    System.out.println("Unable to set native look and feel: " + e);
                }
                
                new mainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Service_Center;
    private javax.swing.JLabel about_RTN;
    private javax.swing.JLabel about_company;
    private javax.swing.JLabel about_email;
    private javax.swing.JLabel about_exname;
    private javax.swing.JLabel about_licence;
    private javax.swing.JLabel about_name;
    private javax.swing.JLabel about_subname;
    private javax.swing.JLabel about_vercion;
    private javax.swing.JPanel aboutus_panel;
    public static javax.swing.JButton addDevice;
    private javax.swing.JButton addList;
    private javax.swing.JPanel archivo;
    public static javax.swing.JComboBox comm;
    private javax.swing.JTextField csAdd;
    private javax.swing.JLabel customSMS_device;
    private javax.swing.JLabel customSMS_nro;
    private static javax.swing.JButton customSMS_send;
    private javax.swing.JLabel customSend_text;
    private javax.swing.JLabel customSend_tittle;
    private javax.swing.JList deviceList;
    private javax.swing.JScrollPane deviceListScroll;
    private javax.swing.JLabel expired;
    private javax.swing.JFileChooser fileChoose;
    private javax.swing.JLabel fileCols;
    private javax.swing.JLabel fileName;
    private static javax.swing.JLabel ledDevice;
    private static javax.swing.JLabel ledNone;
    private static javax.swing.JLabel ledNumber;
    private javax.swing.JPanel ledPanel;
    private static javax.swing.JLabel ledTime;
    private javax.swing.JDialog licenceDialog;
    private javax.swing.JLabel licenceInfo;
    private javax.swing.JTextField licenceKey;
    private javax.swing.JPanel licencePanel;
    private javax.swing.JButton licenceSend;
    private javax.swing.JComboBox listByName;
    private javax.swing.JDialog log;
    private static javax.swing.JEditorPane logPanel;
    private javax.swing.JScrollPane logScroll;
    private javax.swing.JTabbedPane mainFrame;
    private javax.swing.JLabel mainTittle;
    private javax.swing.JPanel modems;
    private javax.swing.JTextField nameAdd;
    private javax.swing.JButton openFile;
    private static javax.swing.JProgressBar progressBar;
    private static javax.swing.JLabel progressID;
    private javax.swing.JLabel progressLb;
    private javax.swing.JComboBox sendSMS_device;
    private javax.swing.JTextField sendSMS_nro;
    private javax.swing.JScrollPane sendSMS_scroll;
    private javax.swing.JTextArea sendSMS_text;
    public static javax.swing.JButton sendTask;
    public static javax.swing.JButton showDevices;
    private javax.swing.JButton showProgress;
    private static javax.swing.JProgressBar signalBar;
    private javax.swing.JLabel signalLb;
    private static javax.swing.JLabel signalOP;
    private javax.swing.JPanel sms_panel;
    private javax.swing.JPanel status;
    private javax.swing.JList taskList;
    private javax.swing.JScrollPane taskListScroll;
    private javax.swing.JLabel taskList_label;
    private javax.swing.JComboBox time;
    private javax.swing.JSpinner timeInt;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel tittleFile;
    private javax.swing.JLabel txt_addCOM;
    private javax.swing.JLabel txt_listCOM;
    // End of variables declaration//GEN-END:variables
}
